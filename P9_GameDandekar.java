/*

1. Neil Dandekar

2. 10/30/2022

3. This program uses 6 different methods. It uses the main method, one method to convert the 
   operator to a string, one to convert each operand to string, one to evaluate the result, one to 
   print the list of possible operators to the user, and the start method that contains the other 
   method in order to run the program's functionality.

4. Grade: 100%

   Explanation: First, my program uses proper Java naming conventions (e.g. "firstSecondThird...").
   Second, it follows proper indentation, easy to follow and navigate, and organized. Third, 
   comments are provided for each method to describe what its function is and how it works. 
   
   Fourth, my program asks the user for various inputs for operands, the operator, and prints the 
   result as it should. Also, it contains all the methods specified by the directions and uses the 
   switch cases or the if/else statements when it's supposed to.

*/

/* IMPLEMENT THE MEHODS IN THE GIVEN ORDER*/
import java.util.*;
public class P9_GameDandekar
{
  //No code here
}
class Game {    
   public static void main(String[] args) {
      Scanner kb = new Scanner(System.in);
      interact(kb);
      action(kb);
   }
      /* 
      The purpose for this method is to ask the user to enter a positive integer value
      This method gets two paramters Scanner and a string. The string s holds the message being displayed for the user
      This method asks the user to enter a positive number. 
      As long as the entered value is not positive, the method will keep asking the user
      */  
   public static int prompt(Scanner kb, String s) 
   {
      System.out.println("Enter a positive integer: ");
      
      //1. declare a varibale of type int to hold the user's input
      int num;
      //2. display the string s
      System.out.println(s);
      //3. read the user's input using the kb object and store it in the variable declared in step 1
      num = kb.nextInt();
      
      //while the user's input is less than zero 
      while(num < 0)
      {
         // Display a message that your input is not valid
         System.out.println("Input not valid.");
         // display the stirng s
         System.out.println(s);
         // read the user's input and store it in the vaibale declared at step 1 of the method
         num = kb.nextInt();
      }
      return num; //change this line to return the variable you declared at the step 1 of the method
   }
   
   /* This method displays the intro given in the sample output. It must match excatly with the sample output. Refer to the provided
   output
   */
   public static void interact(Scanner kb)
   {
      System.out.println("Hello, I am a computer playing a guessing game with you.");
      System.out.println("What is your name? ");
      String name = kb.nextLine();

      System.out.println("Hey " + name + " I am excited to play the guessing game with you I will think of a number between a low  and a high values  entered by you and will allow you to guess until you get it. For each guess, I will give you a hint whether the right answer is higher or lower than your guess.");
      System.out.println("-----------------------------------------------------");
   }
         
   /* this method gets two numbers called guess and randNum
   if guess is greater than randNum then return "Lower"
   else if guess is less than randNum return "Higher"
   else return match*/
   public static String match(int guess, int randNum) 
   {
      if(guess > randNum) return "Lower";
      else if(guess < randNum) return "Higher)";
      else return "Match";
   }

   /*
   This method displays the result on the screen. 
   This method gets two parameters representing the number of the games the person played and the total guesses 
   made for all the games played
   */
   public static void report(int numGames, int totGuesses) 
   {
      System.out.println("*********************************************");
      System.out.println("Congratulations! You got it right in " + totGuesses + " guesses and you have played " + numGames + " game(s).");
   }
   
   /*
   This method plays the game. it will generate a random number between min and max.
   asks the user to guess the number generated by the computer. As long as the user is not making the correct guess
   will keep propmting the user. Once the user makes a correct guess, it will end the game
   Also it keeps track of the number of the guesses that the user has made. 
   Return: This method returns the number of the guesses the person made 
   Refer to the sample output
   */ 
   public static int funGame(Scanner console, int min, int max) 
   {
       
      //1. create a Random class object
      Random rand = new Random();
      //2. Generate a random number between the given min and max and store it in a variable. This variable is holding the computer pick
      int num = rand.nextInt(max - min + 1) + min;
      //3. declare a variable to hold the user's guess, initialize it to zero
      int guess = 0;
      //4. declare a variable to hold the number of the guesses the person will make per game, set it to zero
      int numGuesses = 0;
      //5. flush the buffer
      console.nextLine();
      //6. prompt the user that I am thinking of a numbr between min and max. the actual min and max values must be displayed(refer to the sample output
      System.out.println("I am thinking of a number between " + min + " and " + max + ".");
      //7. display the message saying give me a few seconds to think , then enter any key to continue
      System.out.println("Give me a few seconds to think. Press any key to continue.");
      //8. flush the buffer
      console.nextLine();
      // while the user's guess does not equal the computer pick
      while(guess != num)
      {
         //increment the variable declared in step 4
         numGuesses++;
         //prompt the user to enter a  guess
         System.out.println("Enter a guess: ");
         //read the user's input and store the user's input in the variable you declared at step 3
         guess = console.nextInt();
         //call the method match and store the return of this method in a variable called result
         String result = match(guess, num);
         //if the variable result contains "match"
         if(result.equals("Match")) {
            //display the congrats message
            System.out.println("Congrats! You got it in " + numGuesses + " guesses.");
            //display the variable declared in step 4 which holds the number of the guesses that the person made
         }
         else {
            System.out.println();
            // else
            // display the the content of the variable result       
         }
                
                         
      } //end of while loop
      System.out.println();
      return numGuesses; // change this line to return the variable you declared at step 4 which is the number of the guesses made
   }
   
   /*    LAST METHOD TO IMPLEMENT*/

    /* This method calls the other methods to get the game started.*/
   public static void action(Scanner console)  
   {      
      int numGames = 0; // total number of the games played by the person
      int totGuesses = 0; // total guesses for all the games played
      int min = 0; // holds the min value entered by the user
      int max = 0 ; //holds the max value entered by the user
      String repeat = "yes";           
      while (repeat.equalsIgnoreCase("yes")) {// allows the player to play many rounds of the game
         String s = "Enter a low value :";
         String s1 = "Enter the high value:";
         //1. call the method prompt and pass the console, and s value to it, store the result in the vaiable min 
         min = prompt(console, s);
         //2. call the method prompt and pass console, and s1 value to it, store the result in the vaiable max
         max = prompt(console, s1);
         //while max is less than min  
         while(max < min)
         {
            System.out.println("You entered an invalid value for max. Max must be greater than min. lets start all over again\n");
            //call the method prompt and pass console and s
            min = prompt(console, s);
            //call the method prompt and pass console and s1
            max = prompt(console, s1);
         } //end while

         //call the method funGame with the proper parameters and store the result in a variable called guesses
         int guesses = funGame(console, min, max);
         //add the guesses to totGusses
         totGuesses += guesses;
         //increment numGames
         numGames++;
         //prompt the user if they want to play again or not
         System.out.println("Do you want to play again? ");
         //read the user's respond in the varibale repeat
         repeat = console.nextLine();
         System.out.println();
      }
      //call the method report and pass numGames and totGusses
      report(numGames, totGuesses);
   }

}